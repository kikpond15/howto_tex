%%% emathAe.sty by tDB(emath@nifty.com)

\def\tmpname{LaTeX2e}%
\newif\ifappendanswer\appendanswerfalse

%   解答を置く位置の指定
\@ifundefined{c@kaitou@syorihou}{\newcounter{kaitou@syorihou}}{}%
%                               0: デフォルトは巻末にまとめる．
% continue                      1: 問題に続けて
% ignore                        2: まったく無視する(コメント扱い)
% debug                         3: デバッグ用 (\kaitou は無効コマンド)
%                                 (edaitemm 環境，\edaitemm コマンドとは
%                                  併用できません．この場合は
%                                  continue オプションをご利用ください．)
% readonly                      4: .kai ファイルを作成はせず，読み込むだけ．
% nidan                         5: nidan で解答部分を二段組
% maskAnstrue
%   continue オプションで，\color{white}として答えを白で印刷
% maskAnsfalse
%   continue オプションと同じ。
% appendanswer                '\jobname a' ファイルを読み込む。
% noappendanswer              '\jobname a' ファイルを読み込まない(デフォルト）
%
\ifx\fmtname\tmpname%
  \NeedsTeXFormat{LaTeX2e}
  \ProvidesPackage{emathAe}[2005/09/05 v0.45]%
%
\newif\ifmaskAns\maskAnsfalse
%
% continue オプションを指定したときは，問題の下．
  \DeclareOption{continue}{\setcounter{kaitou@syorihou}{1}\relax
    \def\KaitouTTL{\par\small【解答】\par}}%
% ignore オプションを指定したときは，解答は出力しない
  \DeclareOption{ignore}{\setcounter{kaitou@syorihou}{2}\relax}%
% debug オプションを指定したときは，デバッグ用
  \DeclareOption{debug}{\setcounter{kaitou@syorihou}{3}\relax}%
% readonly オプションを指定したときは，.kai ファイルを再構築せずに読み込む
  \DeclareOption{readonly}{\setcounter{kaitou@syorihou}{4}\relax}%
% nidan オプションを指定したときは，解答部分を2段組
  \DeclareOption{nidan}{\setcounter{kaitou@syorihou}{5}\relax}%
% maskAnstrue
  \DeclareOption{maskAnstrue}{%
    \maskAnstrue
    \@ifundefined{ifmaskhako}{}{\maskhakotrue}%
    \def\KaitouTTL{\small\medskip\par\noindent 【解答】}%
    \setcounter{kaitou@syorihou}{1}\relax}%
% maskAnsfalse
  \DeclareOption{maskAnsfalse}{%
    \maskAnsfalse
    \@ifundefined{ifmaskhako}{}{\maskhakofalse}%
    \def\KaitouTTL{\small\medskip\par\noindent 【解答】}%
    \setcounter{kaitou@syorihou}{1}\relax}%
  \DeclareOption{appendanswer}{\appendanswertrue}
  \DeclareOption{noappendanswer}{\appendanswerfalse}
  \DeclareOption{noappend}{\appendanswerfalse}
% \DeclareOption{noappend}{\def\no@append{}}
  \ProcessOptions\relax
  \RequirePackage{emath}%
  \RequirePackage{emathR}%
% \RequirePackage{verbatim}%
\fi%

\ifnum\thekaitou@syorihou=5\relax
    \RequirePackage{multicol}\raggedcolumns
    \columnseprule=0.4pt%
\fi

\newtoks\enum@fmti
\newtoks\enum@fmtii
\newtoks\enum@fmtiii
\newtoks\enum@fmtiv
%
\def\item@option{}%
\define@key{emAe}{itemoption}{\def\item@option{#1}}%
\def\kaitou@yohaku{0pt}%
%
\edef\edaenumopt{\empty}%
\edef\betaenumopt{\empty}%
\let\ltxenumerate\enumerate
\let\endltxenumerate\endenumerate
%\def\owariitem{\relax}%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ??????
\def\Kaienumerate{enumerate}
\def\Kaienumopt{}
\def\KaiFilenum{0}
%\def\stringedaenumerate{edaenumerate}

\let\emAe@item@opt\@undefined
\let\emAe@item\item
\def\item{\@ifnextchar[{\emAe@item@}{\let\emAe@item@opt\@undefined\emAe@item}}
\let\ltxitem\item
\let\Aeitem\item
\def\emAe@item@[#1]{\def\emAe@item@opt{#1}\orgltxitem[#1]}
%\def\emAe@item@[#1]{%
%    \ifthenelse{\equal{#1}\empty}{\let\emAe@item@opt\@undefined\emAe@item}{%
%    \def\emAe@item@opt{#1}\emAe@item[#1]}}% \edef or \def ?
%
\newcommand{\Aesetcurrentenum}[1]{%
  \@ifundefined{owariitem}{}{\owariitem}%
  \edef\@currentenum{enum\romannumeral \@enumdepth}%
  \setcounter{\@currentenum}{#1}}
%
\def\enumerate{\@ifnextchar[{\my@enum@}{\my@enum}}%
\def\my@enum{%
    \@tempcnta\@enumdepth\advance\@tempcnta\@ne
    \csname enum@fmt\romannumeral\@tempcnta\endcsname{}\ltxenumerate}%
\def\my@enum@[#1]{%
    \@tempcnta\@enumdepth\advance\@tempcnta\@ne
    \csname enum@fmt\romannumeral\@tempcnta\endcsname{#1}%
    \ltxenumerate[#1]}%
\def\endenumerate{%
%   \csname enum@fmt\romannumeral\@enumdepth\endcsname{}% 2002/09/20
    \xdef\betaenupopt{\empty}\endltxenumerate}%

\let\ltx@@edaenumerate\@@edaenumerate
\def\@@edaenumerate{\@ifnextchar[{\my@edaenum@}{\my@edaenum}}%
\def\my@edaenum{%
    \@tempcnta\@enumdepth%\advance\@tempcnta\@ne
    \csname enum@fmt\romannumeral\@tempcnta\endcsname{}\ltx@@edaenumerate}%
\def\my@edaenum@[#1]{%
    \@tempcnta\@enumdepth%\advance\@tempcnta\@ne
    \csname enum@fmt\romannumeral\@tempcnta\endcsname{#1}%
    \ltx@@edaenumerate[#1]}%

\def\mark@item{\@ifnextchar[{\emAe@item@}{%
  \let\emAe@item@opt\@undefined\orgltxitem}}% v 0.23

\long\def\verbatimR@addtoline#1{%
  \verbatim@line\expandafter{\the\verbatim@line#1}}

\newwrite\kaitou@out

\def\OpenKaiFile{\xdef\KaiFilenum{0}\openKaiFile}
\def\openKaiFile{\@ifnextchar[{\@openKaiFile}{%
  \xIncr\KaiFilenum\@openKaiFile[\jobname.k\KaiFilenum]}}
\def\@openKaiFile[#1]{\immediate\openout \kaitou@out #1
    \edef\K@currentenumdepth{0}}%
\def\closeKaiFile{%
    \@tempcnta\K@currentenumdepth\relax%
    \@whilenum \@tempcnta>\z@\do{%
    \advance \@tempcnta \m@ne\relax%
  \ifx\empty\edaenumopt
    \ifx\empty\betaenumopt
      \immediate\write\kaitou@out{\string\end\string\Kaienumerate\string\def\string\Kaienumerate{enumerate}\string\def\string\Kaienumopt{}}%
    \else
      \immediate\write\kaitou@out{\string\end{betaenumerate}\string\par}%
      \xdef\betaenumopt{\empty}%
    \fi
  \else
      \immediate\write\kaitou@out{\string\end{edaenumerate}\string\par}%
      \xdef\edaenumopt{\empty}%
  \fi
    }%
    \immediate\closeout\kaitou@out}%
\def\inputKaiFile{\@ifnextchar[{\inputKaiFile@}{\@inputKaiFile}}
\def\inputKaiFile@[#1]{%
%%  \useitemfalse%            2004/01/07 暫定
  \input{#1}
  \xdef\HakoKaiFilenum{0}\relax
%%  \useitemtrue%             2004/01/07
}
\def\@inputKaiFile{%
%%  \useitemfalse%            2004/01/07 暫定
  \Cfor{\edef\inpKF@i{0}}{\inpKF@i<\KaiFilenum}{}\do{%
    \xIncr\inpKF@i
    \input{\jobname.k\inpKF@i}}
%%  \useitemtrue              2004/01/07
  \xdef\HakoKaiFilenum{0}%      2002/09/22  \do ループの外に出す。
  \xdef\KaiFilenum{0}}

%%% Kaitou の定義 -------------------------------------------------
\ifcase\value{kaitou@syorihou}%   % kaitou@syorihou=0
%\def\Kaitou{\def\item@option{}\@ifnextchar<{\Kaitou@}{\@Kaitou}}
%\def\Kaitou@<#1>{%
%  \setkeys{emAe}{#1}%
%  \@Kaitou}
%\def\@Kaitou{%
\def\Kaitou{%
  \ifnum\K@currentenumdepth<\@enumdepth
    \xdef\K@currentenumdepth{\the\@enumdepth}%
    \ifthenelse{%
      \equal{\the\csname enum@fmt\romannumeral\@enumdepth\endcsname}{}}{%
      \ifx\edaenumopt\empty
        \ifx\betaenumopt\empty
          \immediate\write\kaitou@out{\string\expandafter\string\begin\string\expandafter\string\Kaienumerate\string\Kaienumopt}%
          \immediate\write\kaitou@out{%
            \string\ifthenelse{\string\equal{\string\Kaienumerate}{edaenumerate}}{\string\def\string\Aeitem{\string\edaitem}}{}
            \string\ifthenelse{\string\equal{\string\Kaienumerate}{betaenumerate}}{\string\def\string\Aeitem{\string\edaitem}}{}}%
        \else
          \immediate\write\kaitou@out{\string\begin{betaenumerate}}%
        \fi
      \else
        \immediate\write\kaitou@out{\string\begin{edaenumerate}\edaenumopt}%
        \immediate\write\kaitou@out{\string\def\string\Aeitem{\string\edaitem}}%
      \fi
    }{%
      \ifx\edaenumopt\empty
        \ifx\betaenumopt\empty
          \immediate\write\kaitou@out{%
          \string\expandafter\string\begin\string\expandafter\string\Kaienumerate\string\Kaienumopt[%
          \the\csname enum@fmt\romannumeral\@enumdepth\endcsname]}%
          \immediate\write\kaitou@out{%
            \string\ifthenelse{\string\equal{\string\Kaienumerate}{edaenumerate}}{\string\def\string\Aeitem{\string\edaitem}}{}}%
          \immediate\write\kaitou@out{%
            \string\ifthenelse{\string\equal{\string\Kaienumerate}{betaenumerate}}{\string\def\string\Aeitem{\string\edaitem}}{}}%
        \else
          \immediate\write\kaitou@out{%
          \string\begin{betaenumerate}[%
          \the\csname enum@fmt\romannumeral\@enumdepth\endcsname]}%
        \fi
      \else
        \immediate\write\kaitou@out{%
        \string\begin{edaenumerate}\edaenumopt[%
        \the\csname enum@fmt\romannumeral\@enumdepth\endcsname]}%
        \immediate\write\kaitou@out{\string\def\string\Aeitem{\string\edaitem}}%
      \fi%
    }%
  \else\@whilenum\K@currentenumdepth>\@enumdepth\do{%
    \xDecr\K@currentenumdepth
    \ifx\empty\edaenumopt
      \ifx\empty\betaenumopt
        \immediate\write\kaitou@out{\string\end\string\Kaienumerate\string\def\string\Kaienumerate{enumerate}\string\def\string\Kaienumopt{}}%
      \else
        \immediate\write\kaitou@out{\string\end{betaenumerate}\string\par}%
        \xdef\betaenumopt{\empty}%
      \fi
    \else
      \immediate\write\kaitou@out{\string\end{edaenumerate}\string\par}%
      \xdef\edaenumopt{\empty}%
    \fi
  }%
  \fi
  \immediate\write\kaitou@out{\string\def\string\jobname{\jobname}}%
  \@ifundefined{perlflnum}{}{%
    \immediate\write\kaitou@out{\string\xdef\string\perlflnum{\perlflnum}}}%
\ifnum\K@currentenumdepth=\z@%%%%%%%% 2005/08/03
    \immediate\write\kaitou@out{\string\setcounter{Aeans}{\theAeprob-1}\string\begin{Aeans}}%
\else
  \ifx\emAe@item@opt\@undefined%
    \def\@tmp{\getcurrentenum}%
\@ifundefined{ed@beta}{\ISub\@tmp{1}\@tmp}{%
    \ifnum\ed@beta=\z@\ISub\@tmp{1}\@tmp\fi
}%
    \immediate\write\kaitou@out{\string\Aesetcurrentenum{\@tmp}\string\Aeitem\item@option}%
  \else
    \immediate\write\kaitou@out{\string\Aeitem[\emAe@item@opt]}%
  \fi
\fi
  \@bsphack
  \let\do\@makeother\dospecials
  \catcode`\^^M\active
  \def\verbatim@processline{%
    \immediate\write\kaitou@out{\the\verbatim@line}}%
  \verbatim@start}
\def\endKaitou{\@esphack
%   2002/05/31
%  \ifx\empty\betaitem\else
%    \immediate\write\kaitou@out{\string\owariitem}\fi
\ifnum\K@currentenumdepth=\z@
    \immediate\write\kaitou@out{\string\end{Aeans}}%
\fi
}
% 旧定義 \kaitou の Kaitou環境への翻訳
\long\def\kaitou#1{%
  \ifnum\K@currentenumdepth<\@enumdepth
    \xdef\K@currentenumdepth{\the\@enumdepth}%
    \ifthenelse{%
      \equal{\the\csname enum@fmt\romannumeral\@enumdepth\endcsname}{}}{%
      \ifx\empty\edaenumopt
        \ifx\empty\betaenumopt
          \immediate\write\kaitou@out{\string\expandafter\string\begin\string\expandafter\string\Kaienumerate\string\Kaienumopt}%
          \immediate\write\kaitou@out{%
            \string\ifthenelse{\string\equal{\string\Kaienumerate}{edaenumerate}}{\string\def\string\Aeitem{\string\edaitem}}{}}%
          \immediate\write\kaitou@out{%
            \string\ifthenelse{\string\equal{\string\Kaienumerate}{betaenumerate}}{\string\def\string\Aeitem{\string\edaitem}}{}}%
        \else
          \immediate\write\kaitou@out{\string\begin{betaenumerate}}%
        \fi
      \else
        \immediate\write\kaitou@out{\string\begin{edaenumerate}\edaenumopt}%
        \immediate\write\kaitou@out{\string\def\string\Aeitem{\string\edaitem}}%
      \fi
    }{%
      \ifx\empty\edaenumopt
        \ifx\empty\betaenumopt
          \immediate\write\kaitou@out{%
          \string\expandafter\string\begin\string\expandafter\string\Kaienumerate\string\Kaienumopt[%
          \the\csname enum@fmt\romannumeral\@enumdepth\endcsname]}%
          \immediate\write\kaitou@out{%
            \string\ifthenelse{\string\equal{\string\Kaienumerate}{edaenumerate}}{\string\def\string\Aeitem{\string\edaitem}}{}}%
          \immediate\write\kaitou@out{%
            \string\ifthenelse{\string\equal{\string\Kaienumerate}{betaenumerate}}{\string\def\string\Aeitem{\string\edaitem}}{}}%
        \else
          \immediate\write\kaitou@out{%
          \string\begin{betaenumerate}[%
          \the\csname enum@fmt\romannumeral\@enumdepth\endcsname]}%
        \fi
      \else
        \immediate\write\kaitou@out{%
        \string\begin{edaenumerate}\edaenumopt[%
        \the\csname enum@fmt\romannumeral\@enumdepth\endcsname]}%
        \immediate\write\kaitou@out{\string\def\string\Aeitem{\string\edaitem}}%
      \fi
    }
  \else\@whilenum\K@currentenumdepth>\@enumdepth\do{%
    \xDecr\K@currentenumdepth
    \ifx\empty\edaenumopt
      \ifx\empty\betaenumopt
        \immediate\write\kaitou@out{\string\end\string\Kaienumerate\string\def\string\Kaienumerate{enumerate}\string\def\string\Kaienumopt{}}%
      \else
        \immediate\write\kaitou@out{\string\end{betaenumerate}\string\par}%
        \xdef\betaenumopt{\empty}%
      \fi
    \else
      \immediate\write\kaitou@out{\string\end{edaenumerate}\string\par}%
      \xdef\edaenumopt{\empty}%
    \fi
  }%
  \fi
%\typeout{K@currentenumdepth=\K@currentenumdepth,enumdepth=\the\@enumdepth}%
\ifnum\K@currentenumdepth=\z@
    \immediate\write\kaitou@out{\string\setcounter{Aeans}{\theAeprob-1}\string\begin{Aeans}}%
\else
  \ifx\emAe@item@opt\@undefined%
    \def\@tmp{\getcurrentenum}%
\@ifundefined{ed@beta}{\ISub\@tmp{1}\@tmp}{%
    \ifnum\ed@beta=\z@\ISub\@tmp{1}\@tmp\fi
}%
    \immediate\write\kaitou@out{\string\Aesetcurrentenum{\@tmp}\string\Aeitem\item@option}%
  \else
    \immediate\write\kaitou@out{\string\Aeitem[\emAe@item@opt]}%
  \fi
\fi
    \expandafter\verbatimR@addtoline\expandafter{\protect #1}%
    \immediate\write\kaitou@out{\the\verbatim@line}%
    \verbatim@startline
%   2002/05/31
%  \ifx\empty\betaitem\else
%    \immediate\write\kaitou@out{\string\owariitem}\fi
\ifnum\K@currentenumdepth=\z@
    \immediate\write\kaitou@out{\string\end{Aeans}}%
\fi
  }%
\or
  \def\openKaiFile{}%
  \def\closeKaiFile{}%
  \def\inputKaiFile{}%
  \def\Kaitou{%
    \ifmaskAns
      \par
      \definecolor{red}{rgb}{1,1,1}%
      \definecolor{black}{rgb}{1,1,1}%
      \def\EMps@black{1 1 1}%
      \def\EMps@red{1 1 1}%
      \def\nuri@iro@{white}%
      \color{white}%
      \let\normalcolor\relax
    \fi
    \KaitouTTL}%
  \def\endKaitou{%
    \ifdim\kaitou@yohaku>\z@\vspace{\kaitou@yohaku}\fi
  }%
  \long\def\kaitou#1{%
    \ifmaskAns
      \par
      \definecolor{red}{rgb}{1,1,1}%
      \definecolor{black}{rgb}{1,1,1}%
      \def\EMps@black{1 1 1}%
      \def\EMps@red{1 1 1}%
      \def\nuri@iro@{white}%
      \color{white}%
      \let\normalcolor\relax
    \fi
    \KaitouTTL #1\relax
    \ifdim\kaitou@yohaku>\z@\vspace{\kaitou@yohaku}\fi
  }%
\or
  \def\openKaiFile{}%
  \def\closeKaiFile{}%
  \def\inputKaiFile{}%
  \let\Kaitou\comment
  \let\endKaitou\endcomment
  \long\def\kaitou#1{}%
\or
  \def\openKaiFile{}%
  \def\closeKaiFile{}%
  \def\inputKaiFile{}%
  \def\Kaitou{\medskip\hrule\medskip\small【解答】\par}%
  \def\endKaitou{}%
    \def\kaitou{\vspace{.5\baselineskip}\hrule\vspace{.5\baselineskip}}
\or
  \let\Kaitou\comment
  \let\endKaitou\endcomment
  \def\openKaiFile{}%
  \def\closeKaiFile{}%
    \long\def\kaitou#1{}%
\or
  \def\openKaiFile{}%
  \def\closeKaiFile{}%
  \def\inputKaiFile{}%
  \def\Kaitou{\begin{multicols}{2}\small【解答】\par}%
  \def\endKaitou{\end{multicols}}%
  \long\def\kaitou#1{%
      \columnseprule.4pt%
      \begin{multicols}{2}%
      \small 【解】\par
      #1
      \end{multicols}
      }%
\else
  \def\openKaiFile{}%
  \def\closeKaiFile{}%
  \def\inputKaiFile{}%
  \let\Kaitou\comment
  \let\endKaitou\endcomment
  \long\def\kaitou#1{}%
\fi
%-----------------------------------------------------------------
%
% 環境型 Hint
%

\newwrite\hint@out

\def\openHintFile{\immediate\openout \hint@out \jobname.hin
    \edef\H@currentenumdepth{0}}%
\def\closeHintFile{%
    \@tempcnta\H@currentenumdepth\relax%
    \@whilenum \@tempcnta>\z@\do{%
    \advance \@tempcnta \m@ne\relax%
    \immediate\write\hint@out{\string\end\string\Kaienumerate\string\def\string\Kaienumerate{enumerate}\string\def\string\Kaienumopt{}}%
    }%
    \immediate\closeout\hint@out}%
\def\inputHintFile{%
    \input{\jobname.hin}}%

\ifcase\value{kaitou@syorihou}%   % kaitou@syorihou=0
\def\Hint{%
  \ifnum\H@currentenumdepth<\@enumdepth
    \xdef\H@currentenumdepth{\the\@enumdepth}%
    \ifthenelse{%
      \equal{\the\csname enum@fmt\romannumeral\@enumdepth\endcsname}{}}{%
      \ifx\edaenumopt\empty
        \ifx\betaenumopt\empty
          \immediate\write\hint@out{\string\expandafter\string\begin\string\expandafter\string\Kaienumerate\string\Kaienumopt}%
        \else
          \immediate\write\hint@out{\string\begin{betaenumerate}}%
        \fi
      \else
        \immediate\write\hint@out{\string\begin{edaenumerate}\edaenumopt}%
      \fi
    }{%
      \ifx\edaenumopt\empty
        \ifx\betaenumopt\empty
          \immediate\write\hint@out{%
          \string\expandafter\string\begin\string\expandafter\string\Kaienumerate\string\Kaienumopt[%
          \the\csname enum@fmt\romannumeral\@enumdepth\endcsname]}%
        \else
          \immediate\write\hint@out{%
          \string\begin{betaenumerate}[%
          \the\csname enum@fmt\romannumeral\@enumdepth\endcsname]}%
        \fi
      \else
        \immediate\write\hint@out{%
        \string\begin{edaenumerate}\edaenumopt[%
        \the\csname enum@fmt\romannumeral\@enumdepth\endcsname]}%
      \fi%
    }%
  \else\@whilenum\H@currentenumdepth>\@enumdepth\do{%
    \xDecr\H@currentenumdepth
    \ifx\empty\edaenumopt
      \ifx\empty\betaenumopt
        \immediate\write\hint@out{\string\end\string\Kaienumerate\string\def\string\Kaienumerate{enumerate}\string\def\string\Kaienumopt{}}%
      \else
        \immediate\write\hint@out{\string\end{betaenumerate}\string\par}%
        \xdef\betaenumopt{\empty}%
      \fi
    \else
      \immediate\write\hint@out{\string\end{edaenumerate}\string\par}%
      \xdef\edaenumopt{\empty}%
    \fi
  }%
  \fi
  \immediate\write\hint@out{\string\def\string\jobname{\jobname}}%
  \@ifundefined{perlflnum}{}{%
    \immediate\write\hint@out{\string\xdef\string\perlflnum{\perlflnum}}}%
  \ifx\emAe@item@opt\@undefined%
    \def\@tmp{\getcurrentenum}%
\ifnum\ed@beta=\z@
    \ISub\@tmp{1}\@tmp
\fi
    \immediate\write\hint@out{\string\Aesetcurrentenum{\@tmp}\string\Aeitem}%
  \else
    \immediate\write\hint@out{\string\Aeitem[\emAe@item@opt]}%
  \fi
  \@bsphack
  \let\do\@makeother\dospecials
  \catcode`\^^M\active
  \def\verbatim@processline{%
    \immediate\write\hint@out{\the\verbatim@line}}%
  \verbatim@start}
\def\endHint{\@esphack}
\or
  \def\openHintFile{}%
  \def\closeHintFile{}%
  \def\inputHintFile{}%
  \def\Hint{\medskip\hrule\medskip\small【ヒント】}%
  \def\endHint{}%
\or
  \def\openHintFile{}%
  \def\closeHintFile{}%
  \def\inputHintFile{}%
  \let\Hint\comment
  \let\endHint\endcomment
\or
  \def\openHintFile{}%
  \def\closeHintFile{}%
  \def\inputHintFile{}%
  \def\Hint{\medskip\hrule\medskip\small【ヒント】}%
  \def\endHint{}%
\or
  \let\Hint\comment
  \let\endHint\endcomment
  \def\openHintFile{}%
  \def\closeHintFile{}%
\or
  \def\openHintFile{}%
  \def\closeHintFile{}%
  \def\inputHintFile{}%
  \def\Hint{\begin{multicols}{2}\small【ヒント】}%
  \def\endHint{\end{multicols}}%
\else
  \def\openHintFile{}%
  \def\closeHintFile{}%
  \def\inputHintFile{}%
  \let\Hint\comment
  \let\endHint\endcomment
\fi
%-----------------------------------------------------------------
\def\setKaienum#1{\strsep{#1}{(}\setKaienum@a\setKaienum@b
  \ifthenelse{\equal\setKaienum@b\empty}{%
    \strsep{#1}<\setKaienum@a\setKaienum@b
    \ifthenelse{\equal\setKaienum@b\empty}{%
      \def\Kaienumerate{#1}}{%
      \def\Kaienumerate{\setKaienum@a}%
      \edef\Kaienumopt{<\setKaienum@b}}%
  }{\def\Kaienumerate{\setKaienum@a}%
    \edef\Kaienumopt{(\setKaienum@b}}}%

\long\def\WriteKaiFile#1{\immediate\write\kaitou@out{#1}}%
\def\writeKaiFile{%
% \owariitem
  \@bsphack
  \let\do\@makeother\dospecials
  \catcode`\^^M\active
  \def\verbatim@processline{%
    \immediate\write\kaitou@out{\the\verbatim@line}}%
  \verbatim@start}

\def\endwriteKaiFile{\@esphack}

\newcommand{\closeFile}{\closeKaiFile\closeHintFile}%

%%% 解答をマスクする機能
%%\ifmaskAns
%%  \let\emKaitou\Kaitou
%%  \def\Nurizen{0}%
%%  \definecolor{red}{rgb}{1,1,1}%
%%  \definecolor{black}{rgb}{1,1,1}%
%%  \def\Kaitou{\color{white}\emKaitou}%
%%\else
%%  \@ifundefined{ifmaskhako}{}{\maskhakofalse}%
%%  \def\KaitouTTL{\small\medskip\par\noindent 【解答】}%
%%\fi
%  \ifmaskAns
%    \let\emKaitou\Kaitou
%    \def\Kaitou{%
%      \definecolor{red}{rgb}{1,1,1}%
%      \definecolor{black}{rgb}{1,1,1}%
%      \def\nuri@iro@{white}%
%      \color{white}%
%      \emKaitou}%
%  \fi
%
\ifappendanswer
  \let\orgReadTeXFile\ReadTeXFile
  \def\ReadTeXFile#1{%
    \orgReadTeXFile{#1}%
    \edef\flnm{#1}%
    \getflnode{#1}\flnm@
    \edefappend\flnm@{a}%
    \IfFileExists{\flnm@}{\orgReadTeXFile\flnm@}{}%
  }
  \AtEndDocument{\edef\flnm@@{\jobname a}%
    \IfFileExists{\flnm@@}{\par\orgReadTeXFile{\flnm@@}}{}}%
\fi
\endinput
%%% end of emathAe.sty
% ver.0.00β  19990819
%     emathA.sty では，\kaitou, \hint などコマンド型であったものを
%     Kaitou, Hint と環境型に変更した．
% ver.0.01    19991105
%     \kaitou も環境型に翻訳して併用可能とする．
% ver.0.02    19991107
%     解答部分を edaenumerate環境で記述するため
%       \edaenumopt を新設する．
% ver.0.03    20000229
%     \xdef\edaenumopt{...} で解答部・小問を edaenumerate 環境にしたとき，
%     終了を \end{edaenumerate} としてあったが，不十分で \par を附加し
%         \end{edaenumerate}\par
%     とする．
% ver.0.04    20000304
%     \end{enumerate} を発行する回数の調整．
% v.0.05      20000325
%     \openKaiFile ファイル名を [...] オプションで指定可能とする。
% v0.06       2000/04/02
%     nidan オプションを指定したときは multicol を読み込む。
% v0.07       2000/04/10
%     nidan オプションを指定したときは \columnseprule=0.4pt も附加
% v0.08       2000/06/22
%     enum@fmti,ii,iii,iv トークンとする。
% v0.09       2000/07/10
%     \enum@fmt に \the をつけるべきところがあった。
% v0.11       2000/09/01
% v0.12 2001/02/11
%         hako.sty との連携で，\HakoKaiFilenum の初期化を付加。
% v0.13 2001/06/22
%         \item に[...]オプションがある場合に対応
% v0.14 2001/06/28
%         上記修正の Hint 環境の不備修正
% v0.15 2001/06/30
%         edaenumerate 環境への対応
% v0.16 2001/07/22
%         mawarikomi 環境との調整
%         debug, continue オプション時 【解答】の後ろに \par を附加
% v0.17 2001/07/23
%         解答部を betaenumerate 環境で記述するために
%             \xdef\betaenumopt{1}
% v0.18 2001/07/29
%         解答部の enumerate形式を
%           \def\Kaienumerate{edaenumerate}
%           \def\Kaienumopt{<3>}
%         などで切り替える。
% v0.19 2001/07/30
%         \setKaienum{edaenumerate<3>}により
%           \def\Kaienumerate{edaenumerate}
%           \def\Kaienumopt{<3>}
%           をまとめて指定できるようにする。
%         \WriteKaiFile : writeKaiFile環境のコマンド版
%                         ただし，\string\vspace{...} など，\string が必要
% v 0.20 2001/08/17
%         \def\emAe@item@ において，\edef ---> \def ???
% v 0.21 2001/09/07
%         perl との連携対応
% v 0.22 2001/09/18-10/20
%         その修正
%         \KaiFilenum を新設し，解答ファイル拡張子を
%           .k1, .k2, ......
%         と，複数のファイルを作れるようにした。
%         \OpenKaiFile \KaiFilenum を 0 にリセットして，\openKaiFile へ。
% v 0.23 2001/11/28
%       \item[] のとき，番号が出力されていたバグを修正
% v 0.24 2001/12/09
%     \def\KaitouTTL#1 で continue モードのときの解答部分の先頭を指定
% v 0.25 2002/05/31
%     \owariitem の書き出しを止める。（2箇所）
% v 0.26 2002/09/22
%    \xdef\HakoKaiFilenum{0}%  \inputKaiFile において \do ループの外に出す。
% v 0.27
%    maskAnstrue, maskAnsfalse オプション
% v 0.28
%    maskAns... と \Nuritubusi との調整
% v 0.29
%   \maskAnstrue の場合も \KaitouTTL を定義しておく。
% v 0.30
%   Hint 環境において，enumdepth の戻り処理に不備あり。
% v 0.31
%   edaenumerate環境内にリスト形環境を置くことを可能とする。
%   edaenumerate環境内は，\item に替えて
%       \Aeitem
%   を新設。
%   その初期状態は \item で，edaenumerate環境のときは \edaitem となる。
%   \inputKaiFile は \useitemfalse の前提で，実行する。
% v 0.32
%    0.31改訂のバグ修正
% v 0.33
%    0.31改訂のバグ修正(2) ??????
% v 0.34
%     \inputKaiFile で \useitemfalse を中止
% v 0.35 2004/06/17
%     \maskAnstrue 時，pszahyou 環境にも対応
% v 0.36 2004/07/22
%     \end{document}, \ReadTeXFile の最後に
%       \jobname の末尾に`a'を付したファイルを読み込む
% v 0.37 2004/08/04
%     上記を修正：
%       \ifappendanswer の真偽によることとする。
%       デフォルトは \appendanswerfalse
%       ロードオプション[appendanswer/noappendanswer]
% v 0.38 2005/03/04
%       \maskAnstrue 時，冒頭で \par を発行
% v 0.39 2005/06/10
%       Kaitou環境に <itemoption=..>オプションを新設 -- 保留
% v 0.40 2005/06/11
%       yokoenumerate : emathAe.sty との併用で修正
% v 0.41 2005/06/15
%       kaitou@yohaku
% v 0.42 2005/07/16
%       betaenumerate環境における\kaitou のナンバリング修正
% v 0.43 2005/07/19
%       maskanstrue オプションを指定したときは \let\normalcolor\relax
% v 0.44 2005/08/03
%       第1層を newtheorem で定義する場合は，
%              問題のカウンタを Aeprob
%              解答のカウンタを Aeans
%       とする。
% v 0.45 2005/09/05
%       emathEy.sty 独立による修正
